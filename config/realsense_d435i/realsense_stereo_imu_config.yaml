%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 2  

imu_topic: "/camera/imu"
image0_topic: "/camera/infra1/image_rect_raw"
image1_topic: "/camera/infra2/image_rect_raw"
output_path: "/home/tzy/output/"

cam0_calib: "left.yaml"
cam1_calib: "right.yaml"
image_width: 640
image_height: 480
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 0.99996559,  0.0044025,   0.00703131, -0.00749161,
      -0.00447145,  0.99994177,  0.00982165,  0.00525509,
      -0.00698766, -0.00985275,  0.99992705,  0.00597299,
      0, 0, 0, 1]

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 0.9999821,   0.00515472,  0.003038,    0.04252952,
      0.00073883,  0.9999979,   0.00191038, -0.00008851,
      -0.00398499, -0.00190742,  0.99999024, -0.00019832,
      0, 0, 0, 1 ]

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 1.3196311633822295e-02         # accelerometer measurement noise standard deviation. #0.2   0.04    0.1
gyr_n: 2.2758011877375768e-03         # gyroscope measurement noise standard deviation.     #0.05  0.004   0.01
acc_w: 4.7211794678536862e-04        # accelerometer bias random work noise standard deviation.  #0.002   0.001
gyr_w: 2.8025376034900192e-05       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.8059396         # gravity magnitude

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: -0.00766631831658                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 1        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/tzy/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
